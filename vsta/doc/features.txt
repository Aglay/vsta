Features by release:

v1.3.2:

Added TCP/IP networking with KA9Q package.
Added ne2000 ethernet interface server.
Added shared libraries.
Enhanced RS-232 so you can set parity, data bits, and so forth.
Added ps(1) command, via the pstat system call interface.
Added CDROM filesystems.
Converted all servers to use syslog.
Port of "vim" vi clone editor.
Floppy driver now works.
i387 FPU supported by kernel--library support still TBD.

v1.3.3:

/proc filesystem, ps(1) uses this, as does kill(1).
Canonical ("line") input mode has command line editing and history.
Stripped a.out format uses one less block, in general.
Fixed ld(1) bug which broke code living in the last 32 bytes of
	an a.out image.
Add cc(1) compiler, based on lcc compiler.  Fast, simple, lousy
	code generation.
More support of read-only files in dos filesystem.
Greatly improved stat(2) emulation.
Major fixes in permission calculations.  Now works pretty much like
	it was originally described.
Fixed namer to allow logins (actually, access to fs/root entry
	for shlib startup) from other than sys.sys capability.
Performance tweaks for vstafs.
Removed various dead code, added more pstat(2) support for kernel
	config values.
Added $s/$S to adb to allow incremental symbol table loading (so you
	can "$s /vsta/lib/libc.shl" and get shlib symbols).
Allow VM page stealing to be active before swap space is configured.
	Only stealing of unmodified pages is possible, but this can
	still be a help on smaller systems.
Port of "rh" find(1)-like tool using C syntax.
Add ~ and ~user processing for open()

v1.4.0:

Significant work by Dave Hudson on performance.  Also a new malloc()
	which allows fast inline allocation for most common cases.
Source reorganization; a src/ subdirectory now holds the source.  Long
	promised, finally delivered.
New syscall convention using registers
Add "include" directive to make
Organize source and makefiles to support multiple architectures
Added source for 68030 Amiga port
Per-page TLB flushing where available
DOS filesystem performance tweaks
tfork() passes argument now
Lots of new C library functions
/dev/null server now supports an "always full" switch--useful for testing
Added xargs, echo, strings
vstafs: fix up how directories are grown
Cleanup of pset data structure and routines
Cleanup of adb, add :n to step over procedure calls

1.4.1:
Speed up and bug fix event delivery code
Add support for "bt X" in kdb to backtrace an arbitrary thread
Make FDL memory file descriptors work as a FIFO ring
Fix a crash where a connect request is dropped due to server death
Protect against a debugged process clearing its debugger port_t
Networking.  /inet server, telnet daemon, remote console.
A speed/memory tweak for tmpfs; larger single I/O as a side effect
RCS is working (knock on wood)
chmod() maps onto VSTa permissions (was a no-op)
O_CHMOD supported for open() and friends
DOS server permits switching between RO and RW permissions now
Shadow password file
A couple more man pages
VSTa VM page stealing rework.  Actually seems to work! (YMMV :->)
SCSI Tape & autosense support from Mike Larson

1.5:
Fix case where "swapd -n" was still trying to push dirty pages
Add "core" kdb command
Performance: shaved a cycle off the shlib call path, deleted t_qsav
	and reaped a whole setjmp() of writes on each syscall
Kernel preemption
More man pages
Permit I/O interruption w/o server ack for still-queued messages
Add setsid(), and have login move each session to its own signal group
Permit client disconnects w/o server ack; along with I/O interruption,
	this should permit a client to interrupt out and disconnect
	from a moribund server.  It also solves an interesting deadly
	embrace in the exit of a server where a cache MMAP reference
	still exists.
Protect against buggy server operating against non-requesting client
Fix bug in explicit server port closing
Fix bug in fseek() from relative position
Revamp mouse handler
Add port of MGR windowing system

1.5.1:
Bug fixes for kernel preemption
Performance: remove unneeded entries from default namespace
First implementation of ABC, Asynchronous Buffer Cache library
Semaphore server
Kernel-level thread mutexes
More MGR cleanup (less memory, slightly faster)
vFAT entries don't kill DOS server any more
Floating point support
popen/pclose
funopen/fropen/fwopen
Ports of sc, bc, Tiny Smalltalk

1.5.2
vstafs fsck will now repair damage (not just find it)
vstafs now uses ABC
namer entries are cleared when the registering server exits
added "purge" command to clean up old entries in vstafs 
	versioning filesystem.
Prototype of proxyd for doing proxy VSTa messages over TCP/IP
A couple really painful MGR bugs fixed; it's now usable
Taught various commands about window sizing (ls, editors, less, termcap)
ar won't croak vstafs (edge case, renaming on top of active file)

1.6
Conversion to gcc 2.x.  Now requires an FPU to use gcc, sorry!
Port of gdb using a.out stabs.  Symbolic source debugging (both
	under gdb as well as dynamic attach) works.
Emulations of environ[], sys_errlist[], and sys_nerr.
Stubs for setrlimit stuff.
Proxy functions over KA9Q TCP/IP now working.
Ports of GNU awk, bison, flex, make, text utils, file utils.
VSTa is Multiboot compliant; boots from GRUB loader.  Boot from under
	DOS is no longer used.

1.6.1
Fix KA9Q so it doesn't lock up on "real" network interfaces.
Add packet buffering to srv/mach/ne.  TCP/IP is now actually
	usable.
Convert srv/dos to getopt().
Add -B flag to dos and vstafs to set buffer cache size.
Fix PATH inheritance bug in /bin/sh; shell scripts could otherwise
	fail pathname lookup for their commands.
Fix bug in environ[] emulation; garbage chars at end of some strings.
Help for kernel debugger.
PID's now start at 1 so even the first process can be notify()'ed.
Enable SIGINTR/SIGQUIT generation from console keyboard.  Fix login
	to mark process group to TTY, and TTY mode handling to permit
	updating of the TTY input signal state.  Said signals are
	generated with the assumed identity of the client who set
	the process group.
Add -k to rs232 server so it's easy to control whether ^Z puts you
	into the kernel debugger.

1.6.2
Add rcsdo/changed, my tools for working with RCS trees.
Fix docs on rawrite'ing, also more spots missed in the great
	filesystem server command line change fiasco.
Update sample boot/menu.lst to reflect file server command line syntax.
On usage() errors, have DOS and vstafs put out a message to syslog
	as well as stderr (which, DOS being a boot server, isn't active).
Fixed memory leak in ethernet driver
Added memory leak instrumentation to libc malloc.c
Added standard filesystem switch support to all filesystems
KA9Q and proxyd now work for open/close/read/write/stat.  So distributed
	kernel messaging is now working.  Mount remote filesystems.
	Even /proc!  Kill remote processes!  Wheee!
Implement support for ISA bus limitation "bounce buffers".
Use bounce buffers in our two ISA DMA drivers--SCSI and floppy disk.
Fix a nasty race condition in vstafs.

1.6.3
FAT-32 support.
Fix race condition in parallel threads faulting same vaddr.
Fix bug in execvp which would sometimes hose the last argument
M_TIME is gone.  RIP.
Add select() emulation.  select() is supported by ka9q/networking,
	MGR terminals, and the console(s).
Fix bug in grep(1), which used the wrong value of O_RDONLY.
Fix crash when fork()'ing while another thread is blocked in
	a msg_connect attempt.
Fix hang when quitting MGR (had to hit a key on the terminal to
	actually let it exit).
MGR's $HOME/mgr.rc file now works... example in /vsta/guest.
Port of ctags.
Cleaned up MGR's "resetwin" command.
Implemented ephemeral threads to support alarm(), SIGCHLD, ABC, etc.
	See sched_op().
Implemented ANSI C atexit().
Low-level VSTa event handler API, handle_event() from <event.h>
Fix crash when m_to_sm() fails, but a segment cleanup is attempted anyway.
DOS now maps ".<file>" to "_<file".  Renamed sh.profile to _shrc,
	rh.rc to _rhrc, mgr.rc to _mgrrc.  _exrc for vim remains the same.
Re-org of makefile structure; creation of global makefile.all.
Move a bunch of binary ports to a new vsta/src/bin/ports subdir.
Create a vsta/src/include, which holds the RCS-managed versions.
	The "make install" phase copies header files to their
	place in vsta/include.
POSIX signal emulation.  This is all the signal set handling stuff
	beyond the basic signal() API (which has existed for a while).
User and system CPU times of getrusage() are now filled in.
clock_t and clock() are now supported.
A <linux.h> has some stuff useful for porting Linux programs.
testsh wouldn't wait and retry to connect with the console.  In some
	scenarios, this would put it in an endless silent tight loop.
Added a fionread() to <fcntl.h> to provide the ioctl FIONREAD function.
Ported zmodem rz/sz.  Not working exactly right just yet....
Ported svgalib and jpeg6b.  Got some of the svgalib demo apps working.
Ported PD m4 from FreeBSD.
Ported the 8-bit color driver from mgr-0.69 into the VSTa MGR port.
	Adapted it to use svgalib.  Got high res working with MGR.
Added BSD's err/warn API's.
