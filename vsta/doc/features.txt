Features by release:

v1.3.2:

Added TCP/IP networking with KA9Q package.
Added ne2000 ethernet interface server.
Added shared libraries.
Enhanced RS-232 so you can set parity, data bits, and so forth.
Added ps(1) command, via the pstat system call interface.
Added CDROM filesystems.
Converted all servers to use syslog.
Port of "vim" vi clone editor.
Floppy driver now works.
i387 FPU supported by kernel--library support still TBD.

v1.3.3:

/proc filesystem, ps(1) uses this, as does kill(1).
Canonical ("line") input mode has command line editing and history.
Stripped a.out format uses one less block, in general.
Fixed ld(1) bug which broke code living in the last 32 bytes of
	an a.out image.
Add cc(1) compiler, based on lcc compiler.  Fast, simple, lousy
	code generation.
More support of read-only files in dos filesystem.
Greatly improved stat(2) emulation.
Major fixes in permission calculations.  Now works pretty much like
	it was originally described.
Fixed namer to allow logins (actually, access to fs/root entry
	for shlib startup) from other than sys.sys capability.
Performance tweaks for vstafs.
Removed various dead code, added more pstat(2) support for kernel
	config values.
Added $s/$S to adb to allow incremental symbol table loading (so you
	can "$s /vsta/lib/libc.shl" and get shlib symbols).
Allow VM page stealing to be active before swap space is configured.
	Only stealing of unmodified pages is possible, but this can
	still be a help on smaller systems.
Port of "rh" find(1)-like tool using C syntax.
Add ~ and ~user processing for open()

v1.4.0:

Significant work by Dave Hudson on performance.  Also a new malloc()
	which allows fast inline allocation for most common cases.
Source reorganization; a src/ subdirectory now holds the source.  Long
	promised, finally delivered.
New syscall convention using registers
Add "include" directive to make
Organize source and makefiles to support multiple architectures
Added source for 68030 Amiga port
Per-page TLB flushing where available
DOS filesystem performance tweaks
tfork() passes argument now
Lots of new C library functions
/dev/null server now supports an "always full" switch--useful for testing
Added xargs, echo, strings
vstafs: fix up how directories are grown
Cleanup of pset data structure and routines
Cleanup of adb, add :n to step over procedure calls

1.4.1:
Speed up and bug fix event delivery code
Add support for "bt X" in kdb to backtrace an arbitrary thread
Make FDL memory file descriptors work as a FIFO ring
Fix a crash where a connect request is dropped due to server death
Protect against a debugged process clearing its debugger port_t
Networking.  /inet server, telnet daemon, remote console.
A speed/memory tweak for tmpfs; larger single I/O as a side effect
RCS is working (knock on wood)
chmod() maps onto VSTa permissions (was a no-op)
O_CHMOD supported for open() and friends
DOS server permits switching between RO and RW permissions now
Shadow password file
A couple more man pages
VSTa VM page stealing rework.  Actually seems to work! (YMMV :->)
SCSI Tape & autosense support from Mike Larson

1.5:
Fix case where "swapd -n" was still trying to push dirty pages
Add "core" kdb command
Performance: shaved a cycle off the shlib call path, deleted t_qsav
	and reaped a whole setjmp() of writes on each syscall
Kernel preemption
More man pages
Permit I/O interruption w/o server ack for still-queued messages
Add setsid(), and have login move each session to its own signal group
Permit client disconnects w/o server ack; along with I/O interruption,
	this should permit a client to interrupt out and disconnect
	from a moribund server.  It also solves an interesting deadly
	embrace in the exit of a server where a cache MMAP reference
	still exists.
Protect against buggy server operating against non-requesting client
Fix bug in explicit server port closing
Fix bug in fseek() from relative position
Revamp mouse handler
Add port of MGR windowing system
